* Benchmarks for the new PRNG code
** Prelude
   #+BEGIN_SRC clojure
     (ns user
       (:require [clojure.test.check.random :as random]
                 [criterium.core :refer [bench]]))
   #+END_SRC

   #+RESULTS:
   : ;;=> nil

** Generating 256 longs
*** with java.util.Random
    #+BEGIN_SRC clojure
      (let [r (java.util.Random. 42)]
        (bench (loop [i 256 sum 0]
                 (if (zero? i)
                   sum
                   (recur (dec i) (bit-xor sum (.nextLong r)))))))
    #+END_SRC

    #+begin_example
    ;; Evaluation count : 5253120 in 60 samples of 87552 calls.
    ;;              Execution time mean : 11.453734 µs
    ;;     Execution time std-deviation : 84.696027 ns
    ;;    Execution time lower quantile : 11.365932 µs ( 2.5%)
    ;;    Execution time upper quantile : 11.589984 µs (97.5%)
    ;;                    Overhead used : 13.109376 ns
    ;;
    ;; Found 2 outliers in 60 samples (3.3333 %)
    ;; 	low-severe	 1 (1.6667 %)
    ;; 	low-mild	 1 (1.6667 %)
    ;;  Variance from outliers : 1.6389 % Variance is slightly inflated by outliers
    ;;
    ;;=> nil
    #+end_example

*** with linear generation via t.c.random
    #+BEGIN_SRC clojure
      (let [r (random/make-random 42)]
        (bench (loop [i 256, sum 0, r r]
                 (if (zero? i)
                   sum
                   (let [[r1 r2] (random/split r)]
                     (recur (dec i) (bit-xor sum (random/rand-long r1)) r2))))))
    #+END_SRC

**** Initial code (f8b94809)
     #+begin_example
       Evaluation count : 11040 in 60 samples of 184 calls.
                    Execution time mean : 5.500240 ms
           Execution time std-deviation : 67.106188 µs
          Execution time lower quantile : 5.374594 ms ( 2.5%)
          Execution time upper quantile : 5.654754 ms (97.5%)
                          Overhead used : 13.109376 ns

       Found 1 outliers in 60 samples (1.6667 %)
        low-severe   1 (1.6667 %)
        Variance from outliers : 1.6389 % Variance is slightly inflated by outliers
     #+end_example
**** ThreadLocal (37fa77a7)
     #+BEGIN_EXAMPLE
       Evaluation count : 92280 in 60 samples of 1538 calls.
                    Execution time mean : 635.110567 µs
           Execution time std-deviation : 10.881160 µs
          Execution time lower quantile : 621.942023 µs ( 2.5%)
          Execution time upper quantile : 662.181206 µs (97.5%)
                          Overhead used : 13.109376 ns

       Found 6 outliers in 60 samples (10.0000 %)
        low-severe   3 (5.0000 %)
        low-mild   3 (5.0000 %)
        Variance from outliers : 6.2724 % Variance is slightly inflated by outliers
     #+END_EXAMPLE
**** Cached KeySpecs (58b22c5e)
     #+BEGIN_EXAMPLE
       Evaluation count : 181320 in 60 samples of 3022 calls.
                    Execution time mean : 313.606120 µs
           Execution time std-deviation : 19.943579 µs
          Execution time lower quantile : 282.173587 µs ( 2.5%)
          Execution time upper quantile : 350.234214 µs (97.5%)
                          Overhead used : 12.887344 ns
     #+END_EXAMPLE
**** Aphyr's custom secret key spec (0e77ac122)
     #+BEGIN_EXAMPLE
       WARNING: Final GC required 3.547918714888014 % of runtime
       Evaluation count : 224880 in 60 samples of 3748 calls.
                    Execution time mean : 281.458236 µs
           Execution time std-deviation : 17.272071 µs
          Execution time lower quantile : 250.376977 µs ( 2.5%)
          Execution time upper quantile : 312.652149 µs (97.5%)
                          Overhead used : 12.996586 ns
     #+END_EXAMPLE
* Benchmarking =lein test=

  Why is master so slow here?
  
** Siphash
   20690.35ms +- 740ms
   45 tests, 57 assertions
** master
   31872.40ms +- 1319ms
   46 tests, 58 assertions
** AES
   29473.85ms +- 1295ms
   45 tests, 57 assertions
* Benchmarking =xor-random=
  These are run on a VM with slow AES execution.

  | Command                                                  | Time      |
  |----------------------------------------------------------+-----------|
  | =time lein xor-random 42 1000000000 JUR=                 | 39.618s   |
  | =time lein xor-random 42 1000000000 siphash-balanced-63= | 2m23.229s |
  | =time lein xor-random 42 1000000000 AES-balanced-63=     | 7m59.143s |
